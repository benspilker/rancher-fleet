# Make sure to edit the value: yourexampledomain2.com on line 143 AND ALSO ON YAML FILE 6 (CERT): LINES 20 AND 22, AND YAML FILE 7 (INGRESS): LINES 8 AND 20.
apiVersion: v1
kind: Secret
metadata: 
  name: nextcloud
  namespace: nextcloud2
type: Opaque
data:
  nextcloud-username: YWRtaW4=      # Base64 encoded 'admin'
  nextcloud-password: Y2hhbmdlbWU=  # Base64 encoded 'changeme'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nextcloud
  namespace: nextcloud2
  labels:
    app.kubernetes.io/name: nextcloud
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: nextcloud
    app.kubernetes.io/managed-by: Helm
    helm.sh/chart: nextcloud-6.6.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nextcloud
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: nextcloud
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nextcloud
        app.kubernetes.io/component: app
        app.kubernetes.io/instance: nextcloud
    spec:
      containers:
      - name: nextcloud
        image: nextcloud:30.0.5-apache
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
          name: nextcloud-main
          subPath: html
        - mountPath: /var/www/html/config
          name: nextcloud-config
          subPath: config
        - mountPath: /var/www/html/data
          name: nextcloud-data
          subPath: data
        - mountPath: /var/www/html/themes
          name: nextcloud-data
          subPath: themes
        - mountPath: /var/www/html/custom_apps
          name: nextcloud-data
          subPath: custom_apps
        - mountPath: /var/www/tmp
          name: nextcloud-data
          subPath: tmp
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mariadb-secret
              key: password
        - name: MYSQL_DATABASE
          value: nextcloud
        - name: MYSQL_USER
          value: nextcloud
        - name: MYSQL_HOST
          value: mariadb
        - name: NEXTCLOUD_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: nextcloud
              key: nextcloud-username
        - name: NEXTCLOUD_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud
              key: nextcloud-password
        - name: NEXTCLOUD_DATA_DIR
          value: /var/www/html/data

      - name: config-editor
        image: busybox
        command:
        - /bin/sh
        - -c
        - |
          CONFIG_PATH='/var/www/html/config/config.php'
          echo "Waiting for $CONFIG_PATH to be created..."
          while [ ! -f "$CONFIG_PATH" ]; do
            sleep 10
          done

          if ! grep -q 'overwriteprotocol' "$CONFIG_PATH"; then
            toppart=$(head -n 29 "$CONFIG_PATH")
            bottompart=$(tail -n +30 "$CONFIG_PATH")
            newline="  'overwriteprotocol' => 'https',"
            echo "$toppart" > "$CONFIG_PATH"
            echo "$newline" >> "$CONFIG_PATH"
            echo "$bottompart" >> "$CONFIG_PATH"
          fi

          sed -i "s|http://localhost|https://nextcloud.${DOMAINNAME}|g" "$CONFIG_PATH"

          sleep 30

          grep -q "1 => 'nextcloud.${DOMAINNAME}'" "$CONFIG_PATH" || \
          sed -i "/0 => 'localhost'/a\    1 => 'nextcloud.${DOMAINNAME}'," "$CONFIG_PATH"

          sleep 180

          while ! grep -q "1 => 'nextcloud.${DOMAINNAME}'" "$CONFIG_PATH"; do
            sleep 10
            # After the nextcloud instance intializes, the config file will overwrite itself. This adds those changes back again.

            grep -q "1 => 'nextcloud.${DOMAINNAME}'" "$CONFIG_PATH" || \
            sed -i "/0 => 'localhost'/a\    1 => 'nextcloud.${DOMAINNAME}'," "$CONFIG_PATH"
            sed -i "s|http://localhost|https://nextcloud.${DOMAINNAME}|g" "$CONFIG_PATH"
            
            if ! grep -q 'overwriteprotocol' "$CONFIG_PATH"; then
              toppart=$(head -n 29 "$CONFIG_PATH")
              bottompart=$(tail -n +30 "$CONFIG_PATH")
              newline="  'overwriteprotocol' => 'https',"
              echo "$toppart" > "$CONFIG_PATH"
              echo "$newline" >> "$CONFIG_PATH"
              echo "$bottompart" >> "$CONFIG_PATH"
            fi
          done

          echo "Modified config:"
          cat "$CONFIG_PATH"
          
          echo "Done editing config.php"
          tail -f /dev/null  # keep the container alive forever
        env:
        - name: DOMAINNAME
          value: yourexampledomain2.com   # yourexampledomain2.com (Add just the domainname, not subdomain)
        volumeMounts:
        - mountPath: /var/www/html/config
          name: nextcloud-config
          subPath: config

      volumes:
      - name: nextcloud-main
        emptyDir: {}
      - name: nextcloud-config
        persistentVolumeClaim:
          claimName: nextcloud-config-pvc
      - name: nextcloud-data
        persistentVolumeClaim:
          claimName: nextcloud-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: nextcloud
  namespace: nextcloud2
spec:
  selector:
    app.kubernetes.io/name: nextcloud
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: nextcloud
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-config-pvc
  namespace: nextcloud2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
  storageClassName: longhorn
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextcloud-data-pvc
  namespace: nextcloud2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: longhorn
